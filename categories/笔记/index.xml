<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>笔记 on Anby Demara&#39;s Homepage</title>
    <link>https://anburger.site/categories/%E7%AC%94%E8%AE%B0/</link>
    <description>Recent content from Anby Demara&#39;s Homepage</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    
    <managingEditor>yang_zc@aliyun.com (Anburger)</managingEditor>
    <webMaster>yang_zc@aliyun.com (Anburger)</webMaster>
    
    <copyright>本博客所有文章除特别声明外，均采用 BY-NC-SA 许可协议。转载请注明出处！</copyright>
    
    <lastBuildDate>Sun, 03 Aug 2025 21:00:00 +0800</lastBuildDate>
    
    
    <atom:link href="https://anburger.site/categories/%E7%AC%94%E8%AE%B0/index.xml" rel="self" type="application/rss&#43;xml" />
    

    
    

    <item>
      <title>WSL笔记</title>
      <link>https://anburger.site/post/note-of-wsl/</link>
      <pubDate>Sun, 03 Aug 2025 21:00:00 &#43;0800</pubDate>
      <author>yang_zc@aliyun.com (Anburger)</author>
      <guid>https://anburger.site/post/note-of-wsl/</guid>
      <description>
        <![CDATA[<h1>WSL笔记</h1><p>作者：Anburger（yang_zc@aliyun.com）</p>
        
          <h2 id="安装">
<a class="header-anchor" href="#%e5%ae%89%e8%a3%85"></a>
安装
</h2><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1"># 默认安装Unbuntu</span>
</span></span><span class="line"><span class="cl">wsl --install
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1"># 安装其他分发版</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 查看其他分发版</span>
</span></span><span class="line"><span class="cl">wsl --list --online
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 安装指定分发版</span>
</span></span><span class="line"><span class="cl">wsl --install -d Debian
</span></span></code></pre></div><h2 id="备份卸载">
<a class="header-anchor" href="#%e5%a4%87%e4%bb%bd%e5%8d%b8%e8%bd%bd"></a>
备份、卸载
</h2><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1"># 备份</span>
</span></span><span class="line"><span class="cl">wsl --export Debian debian.tar
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1"># 卸载</span>
</span></span><span class="line"><span class="cl">wsl --unregister Debian
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1"># 从备份导入</span>
</span></span><span class="line"><span class="cl">wsl --import Debian D:/wsl .<span class="se">\d</span>ebian.tar
</span></span></code></pre></div>
        
        <hr><p>本文2025-08-03首发于<a href='https://anburger.site/'>Anby Demara's Homepage</a>，最后修改于2025-08-03</p>]]>
      </description>
      
        <category>笔记</category><category>WSL</category><category>Windows</category>
      
    </item>
    
    

    <item>
      <title>摘录</title>
      <link>https://anburger.site/post/excerpts-quotes/</link>
      <pubDate>Fri, 25 Jul 2025 12:00:00 &#43;0800</pubDate>
      <author>yang_zc@aliyun.com (Anburger)</author>
      <guid>https://anburger.site/post/excerpts-quotes/</guid>
      <description>
        <![CDATA[<h1>摘录</h1><p>作者：Anburger（yang_zc@aliyun.com）</p>
        
          <h1 id="reading">
<a class="header-anchor" href="#reading"></a>
Reading
</h1><h2 id="傲慢与偏见">
<a class="header-anchor" href="#%e5%82%b2%e6%85%a2%e4%b8%8e%e5%81%8f%e8%a7%81"></a>
《傲慢与偏见》
</h2><blockquote>
<p>我们都生性不爱交际，沉默寡言，不愿开口，除非我们预料说出话来可以语惊四座，像格言一样光彩夺目，流传千古。</p>
<p>这就是旅伴相得。</p></blockquote>
<h2 id="龙族">
<a class="header-anchor" href="#%e9%be%99%e6%97%8f"></a>
《龙族》
</h2><blockquote>
<p>同一条路，和某些人一起走，就长得离谱，和另外一些人走，就短得让人舍不得迈步子。</p></blockquote>
<blockquote>
<p>这个世界真孤独，在水下80米，你孤独得像独自站在一个星球上，没人听得见你说话，你可以放声大喊，然而无人在意。</p></blockquote>
<blockquote>
<p>比孤独更可悲的事情，就是根本不知道自己很孤独，或者发明很孤独，却把自己都骗得相信自己不孤独。</p></blockquote>
<blockquote>
<p>喜欢一个人那么久，那个人就和自己的过去捆在一起了，要是后悔以前喜欢谁，不就是把自己对以前的时间都否定了吗？</p></blockquote>
<blockquote>
<p>所谓无悔之爱应该是那样一种东西吧&hellip;未必要完美无缺，未必要有好结果，但多年之后你在人海中忽然抬起头来，见远处她独立如礁石，你忽然惊悸忽然震动忽然潸然泪下，速度快到来不及恨或者悲伤。</p></blockquote>
<h2 id="月亮与六便士">
<a class="header-anchor" href="#%e6%9c%88%e4%ba%ae%e4%b8%8e%e5%85%ad%e4%be%bf%e5%a3%ab"></a>
《月亮与六便士》
</h2><blockquote>
<p>卑鄙与伟大，恶毒与仁慈，仇恨与热爱，是可以保存于同一颗心灵里的。</p></blockquote>
<blockquote>
<p>对这个问题的回答取决于你赋予生活什么样的含义，你对社会要尽什么样的义务，以及你对自己有什么样的要求。</p></blockquote>
<h2 id="白夜行">
<a class="header-anchor" href="#%e7%99%bd%e5%a4%9c%e8%a1%8c"></a>
《白夜行》
</h2><blockquote>
<p>他们只是想保护自己的灵魂。结果，雪穗从不以真面目示人，亮司则至今仍在黑暗的通风管中徘徊。</p></blockquote>
<blockquote>
<p>一天当中，有太阳升起的时候，也有下沉的时候。人生也一样，有白天和黑夜，只是不会像真正的太阳那样，有定时的日出和日落。看个人，有些人一辈子都活在太阳的照耀下，也有些人不得不一直活在漆黑的深夜里。人害怕的，就是本来一直存在的太阳落下不再升起，也就是非常害怕原本照在身上的光芒。</p></blockquote>
<blockquote>
<p>我的天空里没有太阳，总是黑夜，但并不暗，因为有东西代替了太阳。虽然没有太阳那么明亮，但对我来说已经足够。凭借着这份光，我便能把黑夜当成白天。</p></blockquote>
<h2 id="重庆森林">
<a class="header-anchor" href="#%e9%87%8d%e5%ba%86%e6%a3%ae%e6%9e%97"></a>
《重庆森林》
</h2><blockquote>
<p>不知道从什么时候开始，在每个东西上面都有一个日子，秋刀鱼会过期，肉酱也会过期，连保鲜纸都会过期。我开始怀疑，在这个世界上，还有什么东西是不会过期的？</p></blockquote>
<blockquote>
<p>如果记忆也是一个罐头的话，我希望这罐罐头不会过期，如果一定要加一个日子的话，我希望它是一万年。</p></blockquote>

        
        <hr><p>本文2025-07-25首发于<a href='https://anburger.site/'>Anby Demara's Homepage</a>，最后修改于2025-07-25</p>]]>
      </description>
      
        <category>笔记</category><category>摘录</category>
      
    </item>
    
    

    <item>
      <title>Vercel Serverless笔记</title>
      <link>https://anburger.site/post/note-of-vercel-edge-function/</link>
      <pubDate>Fri, 01 Aug 2025 21:00:00 &#43;0800</pubDate>
      <author>yang_zc@aliyun.com (Anburger)</author>
      <guid>https://anburger.site/post/note-of-vercel-edge-function/</guid>
      <description>
        <![CDATA[<h1>Vercel Serverless笔记</h1><p>作者：Anburger（yang_zc@aliyun.com）</p>
        
          <h2 id="1-环境准备">
<a class="header-anchor" href="#1-%e7%8e%af%e5%a2%83%e5%87%86%e5%a4%87"></a>
1 环境准备
</h2><p>&#x31;&#xfe0f;&#x20e3;nodejs</p>
<p><a href="https://nodejs.org/">https://nodejs.org/</a></p>
<p>&#x32;&#xfe0f;&#x20e3;注册Vercel</p>
<p><a href="https://vercel.com/">https://vercel.com/</a></p>
<p>&#x33;&#xfe0f;&#x20e3;Vercel CLI</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">npm i -g vercel
</span></span></code></pre></div><p>&#x34;&#xfe0f;&#x20e3;命令行登录vercel</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">vercel login
</span></span></code></pre></div><p><img src="https://qiniu.anburger.site/post/image-20250801220752777.png" alt="image-20250801220752777"></p>
<h2 id="2-quick-start">
<a class="header-anchor" href="#2-quick-start"></a>
2 Quick Start
</h2><blockquote>
<p><strong>云函数 (Cloud Functions)</strong>：在 Vercel 平台上，这通常被称为 <strong>Serverless Functions (无服务器函数)</strong>。</p>
<p>Vercel 的核心理念是<strong>约定优于配置</strong>。你不需要复杂的配置文件，只需要将代码放在正确的目录下，Vercel 就会自动将其部署为 Serverless Function。</p></blockquote>
<p>核心理念<strong>约定优于配置</strong>的加持下，编码的核心便是：<strong>使用 <code>api/</code> 目录</strong></p>
<ol>
<li><strong>创建项目</strong>: 你的项目可以是一个 Next.js 应用，也可以是一个静态网站，甚至是空项目。</li>
<li><strong>创建 <code>api</code> 目录</strong>: 在你的项目根目录下，创建一个名为 <code>api</code> 的文件夹。</li>
<li><strong>编写函数代码</strong>: 在 <code>api</code> 目录下创建一个 JavaScript 或 TypeScript 文件。文件名将成为 API 的路径。</li>
</ol>
<p>&#x31;&#xfe0f;&#x20e3;新建空项目<code>first-serverless</code> &#x27a1;&#xfe0f; 项目根目录下新建文件夹<code>api</code> &#x27a1;&#xfe0f; <code>New hello.js</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">// 标准 Nodejs HTTP 处理函数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">export</span> <span class="k">default</span> <span class="kd">function</span> <span class="nx">handler</span><span class="p">(</span><span class="nx">request</span><span class="p">,</span> <span class="nx">response</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="kr">const</span> <span class="p">{</span> <span class="nx">name</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">request</span><span class="p">.</span><span class="nx">query</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="nx">response</span><span class="p">.</span><span class="nx">status</span><span class="p">(</span><span class="mi">200</span><span class="p">).</span><span class="nx">json</span><span class="p">({</span>
</span></span><span class="line"><span class="cl">        <span class="nx">message</span><span class="o">:</span> <span class="sb">`Hello, </span><span class="si">${</span><span class="nx">name</span> <span class="o">||</span> <span class="s1">&#39;World&#39;</span><span class="si">}</span><span class="sb">! This function is running on the Vercel cloud.`</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">});</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>&#x32;&#xfe0f;&#x20e3;部署</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">vercel --prod
</span></span></code></pre></div><p><img src="https://qiniu.anburger.site/post/image-20250801221517995.png" alt="image-20250801221517995"></p>
<p>执行命令后：</p>
<ul>
<li>Vercel 会自动检测到 <code>api/hello.js</code> 文件。</li>
<li>它会将这个文件打包成一个独立的 Serverless Function。</li>
<li>它会为你生成一个可访问的 URL 端点：<code>https://&lt;你的域名&gt;.vercel.app/api/hello</code>。</li>
<li>当你访问 <code>.../api/hello</code> 时，这个函数就会在云端被触发执行，例如<code>.../api/hello</code>、<code>.../api/hello?name=anby</code>。</li>
</ul>
<p>&#x1f6a9;部署成功后得到一个域名，国内访问需要绑定自己的域名，加上后缀<code>api/hello</code>，成功，Congratulations​!&#x1f389;</p>
<p><img src="https://qiniu.anburger.site/post/image-20250801221800843.png" alt="image-20250801221800843"></p>
<p><img src="https://qiniu.anburger.site/post/image-20250801222424603.png" alt="image-20250801222424603"></p>
<h2 id="3-边缘函数">
<a class="header-anchor" href="#3-%e8%be%b9%e7%bc%98%e5%87%bd%e6%95%b0"></a>
3 边缘函数
</h2><p>Vercel中编写<code>Edge Function</code>只需要在<code>api</code>中指定一个配置项即可：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kr">export</span> <span class="kr">const</span> <span class="nx">config</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">runtime</span><span class="o">:</span> <span class="s1">&#39;edge&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span></code></pre></div><h2 id="4-案例">
<a class="header-anchor" href="#4-%e6%a1%88%e4%be%8b"></a>
4 案例
</h2><p>场景：七牛云对象存储位于海外（亚太-新加坡），通过<code>Edge Function</code>中转七牛云资源请求进行加速。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">// /api/proxy.js
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">export</span> <span class="kr">const</span> <span class="nx">config</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">runtime</span><span class="o">:</span> <span class="s1">&#39;edge&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">export</span> <span class="k">default</span> <span class="kr">async</span> <span class="kd">function</span> <span class="nx">handler</span><span class="p">(</span><span class="nx">request</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 从原始请求中获取路径
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="kr">const</span> <span class="p">{</span> <span class="nx">pathname</span><span class="p">,</span> <span class="nx">search</span> <span class="p">}</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">URL</span><span class="p">(</span><span class="nx">request</span><span class="p">.</span><span class="nx">url</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">if</span> <span class="p">(</span><span class="nx">pathname</span> <span class="o">===</span> <span class="s1">&#39;/&#39;</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="k">new</span> <span class="nx">Response</span><span class="p">(</span><span class="s1">&#39;Qiniu Proxy is Running!&#39;</span><span class="p">,</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nx">status</span><span class="o">:</span> <span class="mi">200</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nx">headers</span><span class="o">:</span> <span class="p">{</span> <span class="s1">&#39;Content-Type&#39;</span><span class="o">:</span> <span class="s1">&#39;text/html&#39;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">});</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c1">// 构建指向七牛云存储桶的目标 URL
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="kr">const</span> <span class="nx">destinationUrl</span> <span class="o">=</span> <span class="sb">`https://your.qiniu.domain</span><span class="si">${</span><span class="nx">pathname</span><span class="si">}${</span><span class="nx">search</span><span class="si">}</span><span class="sb">`</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c1">// 从七牛云获取响应
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="c1">// 我们将原始请求的 headers, method, 和 body 都转发过去
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="kr">const</span> <span class="nx">qiniuResponse</span> <span class="o">=</span> <span class="kr">await</span> <span class="nx">fetch</span><span class="p">(</span><span class="nx">destinationUrl</span><span class="p">,</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">headers</span><span class="o">:</span> <span class="nx">request</span><span class="p">.</span><span class="nx">headers</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">method</span><span class="o">:</span> <span class="nx">request</span><span class="p">.</span><span class="nx">method</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">body</span><span class="o">:</span> <span class="nx">request</span><span class="p">.</span><span class="nx">body</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">redirect</span><span class="o">:</span> <span class="s1">&#39;follow&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">});</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c1">// 将七牛云的响应直接返回给客户端
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="k">return</span> <span class="k">new</span> <span class="nx">Response</span><span class="p">(</span><span class="nx">qiniuResponse</span><span class="p">.</span><span class="nx">body</span><span class="p">,</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">status</span><span class="o">:</span> <span class="nx">qiniuResponse</span><span class="p">.</span><span class="nx">status</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">statusText</span><span class="o">:</span> <span class="nx">qiniuResponse</span><span class="p">.</span><span class="nx">statusText</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">headers</span><span class="o">:</span> <span class="nx">qiniuResponse</span><span class="p">.</span><span class="nx">headers</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="p">});</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div>
        
        <hr><p>本文2025-08-01首发于<a href='https://anburger.site/'>Anby Demara's Homepage</a>，最后修改于2025-07-21</p>]]>
      </description>
      
        <category>笔记</category>
      
    </item>
    
  </channel>
</rss>
